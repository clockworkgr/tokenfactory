syntax = "proto3";
package clockworkgr.tokenfactory.tokenfactory;

import "tokenfactory/denom.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/clockworkgr/tokenfactory/x/tokenfactory/types";

// Msg defines the Msg service.
service Msg {
      rpc CreateDenom(MsgCreateDenom) returns (MsgCreateDenomResponse);
  rpc UpdateDenom(MsgUpdateDenom) returns (MsgUpdateDenomResponse);
  rpc MintAndSendTokens(MsgMintAndSendTokens) returns (MsgMintAndSendTokensResponse);
  rpc UpdateOwner(MsgUpdateOwner) returns (MsgUpdateOwnerResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreateDenom {
  string owner = 1;
  string denom = 2;
  string description = 3;
  string ticker = 4;
  int32 precision = 5;
  string url = 6;
  int32 maxSupply = 7;
  bool canChangeMaxSupply = 8;
}
message MsgCreateDenomResponse {}

message MsgUpdateDenom {
  string owner = 1;
  string denom = 2;
  string description = 3;
  string url = 4;
  int32 maxSupply = 5;
  bool canChangeMaxSupply = 6;
}
message MsgUpdateDenomResponse {}

message MsgMintAndSendTokens {
  string owner = 1;
  string denom = 2;
  int32 amount = 3;
  string recipient = 4;
}

message MsgMintAndSendTokensResponse {
}

message MsgUpdateOwner {
  string owner = 1;
  string denom = 2;
  string newOwner = 3;
}

message MsgUpdateOwnerResponse {
}

// this line is used by starport scaffolding # proto/tx/message